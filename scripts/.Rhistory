mean(as.numeric(c(n_intro[match(unique(data$Species),n_intro$Species),2])), na.rm=T) #79.90% complete within iso3c codes when reported
as.numeric(c(n_intro[match(unique(data$Species),n_intro$Species),2])), na.rm=T
(c(n_intro[match(unique(data$Species),n_intro$Species),2])
)
mean(as.numeric(unlist(n_intro[match(unique(data$Species),n_intro$Species),2])), na.rm=T) #79.90% complete within iso3c codes when reported
length(which(is.na(unlist(n_intro[match(unique(data$Species),n_intro$Species),2])))
()
)
)
is.na(unlist(n_intro[match(unique(data$Species),n_intro$Species),2]))
length(which(is.na(unlist(n_intro[match(unique(data$Species),n_intro$Species),2]))==T)
)
range_prop[match(unique(data$Species),range_prop$Species),1]
length(which(is.na(range_prop[match(unique(data$Species),range_prop$Species),1])))
data_stwist<-merge(data,stwist, by=c("Species", "Official_country"), all.x=T)#not super complete, but might be worth exploring
View(path_dat)
spp_dat<-data.frame(Species=unique(data$Species))
path_dat<-merge(spp_dat, pathways, "Species", all.x=T)# cols 2-47 are causes, 48-76 are vectors
write.csv(data, file="NAm_data_econ_origin.csv", row.names=F)
write.csv(path_dat, file="NAm_pathways.csv", row.names=F)
write.csv(data_stwist, file="NAm_data_stwist.csv", row.names=F)
View(path_dat)
table(path_dat)
colSums(path_dat)
colSums(path_datp,2:76)
colSums(path_dat,2:76)
colSums(path_dat[,2:76])
colSums(path_dat[,2:76], na.rm=T)
View(pathways)
spp_path<-read.csv('../../../../Dropbox/InvaCost Workshop France/Projects/Activity Sector/intro_pathways_cabi_v3.csv')
View(path_dat)
spp_path<-merge(spp_dat, spp_path)
spp_path<-merge(spp_dat, spp_path, all=F)
spp_path<-read.csv('../../../../Dropbox/InvaCost Workshop France/Projects/Activity Sector/intro_pathways_cabi_v3.csv')
spp_path<-merge(spp_dat, spp_path, all=F)
View(spp_dat)
View(spp_path)
spp_path<-read.csv('../../../../Dropbox/InvaCost Workshop France/Projects/Activity Sector/intro_pathways_cabi_v3.csv')
spp_path<-merge(spp_dat, spp_path, by="Species",all=F)
View(spp_dat)
View(spp_path)
spp_path<-spp_path[match(spp_dat$Species, spp_path$species_list),]
colnames(spp_path)
colnames(spp_path)[1]<-"Species"
data<0merge(data, spp_path, "Species")
data<-merge(data, spp_path, "Species")
density<-data %>% group_by(Kingdom,Species) %>% summarise_if(is.numeric, sum)
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2) %>% summarise_if(is.numeric, sum)
pathway<-"all" #toggle between 'for', 'fish','agri' (health has no within-sector breakdown)
density2<-invacost_sub2 %>% group_by(Kingdom,Species, Impacted_sector_2) %>% summarise_at(vars(one_of(get(paste0(pathway, "_path")))), max, na.rm=T)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,28:33])[which(density[i,28:33]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"Cost_GDP"]<-(density[i,"Cost_GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"origin"]<-invacost_sub$origin[match(density$Species[i],invacost_sub$Species)]
}
}
colnames(density)
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"origin"]<-invacost_sub$origin[match(density$Species[i],invacost_sub$Species)]
}
}
names
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
density[i, 47:51]
density[i,"Cost_GDP"]*density[i, names[j]]
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost"]
net[i,"Cost_GDP"]
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"Cost_GDP"]
net[i,"origin"]
net[i,"origin"]<-invacost_sub$origin[match(density$Species[i],invacost_sub$Species)]
net[i,"origin"]<-data$origin[match(density$Species[i],invacost_sub$Species)]
net[i,"origin"]<-data$origin[match(density$Species[i],data$Species)]
origins<-read.csv('intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data$Origin<-NA
data$Origin[match(origin_dat$Species, data$Species)]<-origin_dat$origin
match(origin_dat$Species, data$Species)
origin_dat$origin
match(origin_dat$Species, data$Species)
origin_dat
data$Origin<-NA
origins<-read.csv('intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data$Origin<-NA
match(origin_dat$Species, data$Species)
data<-expanded_observed_and_high_and_country
data$Species<-gsub("spp.","sp.", data$Species) # 51 species + Diverse/Unspecified, several not resolved to the species level
pathways<-read.csv('intro_pathways_vectors_all.csv')
colnames(pathways)[1]<-"Species"
spp_dat<-data.frame(Species=unique(data$Species))
path_dat<-merge(spp_dat, pathways, "Species", all.x=T)# cols 2-47 are causes, 48-76 are vectors
colSums(pathways[,2:47]/rowSums(pathways[,2:47], na.rm=T), na.rm=T) # assuming equal breakdown across pathways for a given species
colSums(pathways[,48:76]/rowSums(pathways[,48:76], na.rm=T), na.rm=T)
origins<-read.csv('intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data<-merge(data, origin_dat, by="Species")
colnames(origin_dat)
data<-expanded_observed_and_high_and_country
data$Species<-gsub("spp.","sp.", data$Species) # 51 species + Diverse/Unspecified, several not resolved to the species level
pathways<-read.csv('intro_pathways_vectors_all.csv')
colnames(pathways)[1]<-"Species"
spp_dat<-data.frame(Species=unique(data$Species))
path_dat<-merge(spp_dat, pathways, "Species", all.x=T)# cols 2-47 are causes, 48-76 are vectors
colSums(pathways[,2:47]/rowSums(pathways[,2:47], na.rm=T), na.rm=T) # assuming equal breakdown across pathways for a given species
colSums(pathways[,48:76]/rowSums(pathways[,48:76], na.rm=T), na.rm=T)
origins<-read.csv('intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data<-merge(data, origin_dat[,c(1,10)], by="Species")
health_spend<-read.csv('CHE by GDP_by country.csv')
health_spend<-health_spend[2:nrow(health_spend),]
health_spend$codes2<-countrycode(health_spend$X, 'country.name', 'iso3c')
data$codes2<-countrycode(data$Official_country, 'country.name', 'iso3c')
data<-merge(data,health_spend[,c(2,20)], "codes2") # WHO % gdp spent on health in 2017 by country (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"health_spend"
ind_spend<-read.csv('API_NV.AGR.TOTL.CD_DS2_en_csv_v2_1121017.csv')
ind_spend$codes2<-countrycode(ind_spend$Country.Name, 'country.name', 'iso3c')
data<-merge(data,ind_spend[,c(62,65)], "codes2" ) #industry value added for agriculture, fisheries, forestries in 2017 (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"ind_spend"
GDP<-wb_data(country = unique(data$codes2), indicator = c( "NY.GDP.MKTP.KD"),  start_date = 2017,end_date=2017, return_wide=TRUE) # could change this to 1960-2017 and match with impact_year
data$GDP<-GDP$NY.GDP.MKTP.KD[match(data$codes2, GDP$iso3c)]
Inv_res_dev <-wb_data(country = unique(data$codes2), indicator = c( "GB.XPD.RSDV.GD.ZS"),  start_date = 2017,end_date=2017, return_wide=TRUE)#one metric used in another paper im on, % gdp expenditure on R&D
data$RD<-Inv_res_dev$GB.XPD.RSDV.GD.ZS[match(data$codes2, Inv_res_dev$iso3c)]
### Import sTwist ###
stwist<-read.table('AlienSpecies_MultipleDBs_Masterfile_vs2.3.csv', header=T)
colnames(stwist)[3]<-'Species'
colnames(stwist)[1]<-"Official_country"
stwist$Official_country<-gsub("United States of America", "USA", stwist$Official_country)
stwist<-subset(stwist, Official_country%in%data$Official_country)
#Completeness of invacost based on stwist 14754 total species
# 51 species + Diverse/Unspecified, several not resolved to the species level
length(which(stwist$Species%in%data$Species))/length(unique(stwist$Species))
stwist_intros<-subset(stwist,establishmentMeans%in%c("introduced" ,   "introduced; uncertain"  ,"introduced; vagrant" ,"introduced; uncertain; vagrant", "introduced; NA","introduced; ; NA"  ,"NA; introduced"))
n_intro<-stwist_intros %>%group_by(Species)%>%summarise_all(length)
clip_spp<-merge(stwist, data, by=c("Species", "Official_country"), all=T)
codes<-countrycode(clip_spp$Official_country, 'country.name', 'iso3c')
countrydat<-readRDS('CountriesDataPop.rds')
countrydat$NAME<-gsub("United States", "USA", countrydat$NAME)
countrydat<-subset(countrydat,  NAME%in%data$Official_country)
codes2<-countrycode(countrydat$NAME, 'country.name', 'iso3c')
clip_spp$Area<-countrydat$area_sqkm[match(codes,codes2)]
#probably actually want area of region rather than country
clip_spp2<-subset(clip_spp, Species%in%data$Species)
clip_spp4<-clip_spp2%>%group_by(Species, Official_country)%>%summarise_if(is.numeric, mean)
range_prop<-range_size<-0
for (i in 1:length(unique(clip_spp4$Species)))
{
sub<-subset(clip_spp, Species==unique(clip_spp4$Species)[i])
range_prop[i]<-sum(sub$Area[which(is.na(sub$cost_bil)==F)], na.rm=T)/sum(sub$Area, na.rm=T)
range_size[i]<-sum(sub$Area, na.rm=T)
}
range_size<-data.frame(range_size, Species=unlist(unique(clip_spp4$Species)))
range_prop<-data.frame(range_prop, Species=unlist(unique(clip_spp4$Species)))
data$range_size<-range_size$range_size[match(data$Species, range_size$Species)]
data$range_prop<-range_prop$range_prop[match(data$Species, range_prop$Species)]
data$n_intro<-n_intro$Official_country[match(data$Species, n_intro$Species)]
mean(range_prop[match(unique(data$Species),range_prop$Species),1]) #79.90% complete within iso3c codes when reported
mean(as.numeric(unlist(n_intro[match(unique(data$Species),n_intro$Species),2])), na.rm=T) #when known, 2.22 independent introductions
length(which(is.na(unlist(n_intro[match(unique(data$Species),n_intro$Species),2]))==T)) #16 unknown
data_stwist<-merge(data,stwist, by=c("Species", "Official_country"), all.x=T)#not super complete, but might be worth exploring
write.csv(data, file="NAm_data_econ_origin.csv", row.names=F)
write.csv(path_dat, file="NAm_pathways.csv", row.names=F)
write.csv(data_stwist, file="NAm_data_stwist.csv", row.names=F)
spp_path<-read.csv('../../../../Dropbox/InvaCost Workshop France/Projects/Activity Sector/intro_pathways_cabi_v3.csv')
spp_path<-spp_path[match(spp_dat$Species, spp_path$species_list),]
colnames(spp_path)[1]<-"Species"
data<-merge(data, spp_path, "Species")
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"origin"]<-data$origin[match(density$Species[i],data$Species)]
}
}
colnames(desity)
colnames(density)
data$origin
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, Origin) %>% summarise_if(is.numeric, sum)
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"origin"]<-data$origin[match(density$Species[i],data$Species)]
}
}
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
cbind(density[i,], names[j], NA)
c(colnames(density), "pathway", "origin"))
setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin"))
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$origin<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway", "origin")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
net[i,"origin"]<-data$origin[match(density$Species[i],data$Species)]
}
}
colnames(net)
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
}
}
names
etNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway"))
setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway"))
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j], NA),c(colnames(density), "pathway")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
}
}
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,47:51])[which(density[i,47:51]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
}
}
(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]
density[i,"GDP"]
density[i, names[j]]
names
colnames(density[i,47:51])
which(density[i,47:51]>0)
density[i,47:51]
names<-colnames(density[i,48:52])[which(density[i,48:52]>0)]
colnames(density[i,48:52])
colnames(density[i,48:53])
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:53])[which(density[i,48:53]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"Cost"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
}
}
setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway"))
(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]*density[i, names[j]])/sum(density[i, 47:51])
(density[i,"Cost_estimate_per_year_2017_USD_exchange_rate"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
net$Cost_GDP<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:53])[which(density[i,48:53]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 47:51])
net[i,"Cost_GDP"]<-(density[i,"cost"]/density[i,"GDP"]*density[i, names[j]])/sum(density[i, 28:33])
}
}
setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway"))
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:53])[which(density[i,48:53]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 47:51])
}
}
(density[i,"cost"]*density[i, names[j]])/sum(density[i, 47:51])
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:53])[which(density[i,48:53]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 48:53])
}
}
(density[i,"cost"]*density[i, names[j]])/sum(density[i, 48:53])
(density[i,"cost"]*density[i, names[j]])
i
j
names
density[i,
]
data$all_other[which(rowSums(data[,48:53])==0)]<-1
data[,48:52]
colnames(data)
data$all_other[which(rowSums(data[,94:99])==0)]<-1
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:53])[which(density[i,48:53]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 48:53])
}
}
colnames(density)
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:54])[which(density[i,48:54]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 48:54])
}
}
net<-net[2:nrow(net),]
library(networkD3)
net$origin[which(is.na(net$origin))]<-"UNK"
links = data.frame(source=net$pathway,target=net$Impacted_sector_2,value=net$Cost_GDP, value2=1, value3=net$Cost,Kingdom=net$Kingdom, origin=net$origin)
links = data.frame(source=net$pathway,target=net$Impacted_sector_2,value=net$cost, value2=1, value3=net$Cost,Kingdom=net$Kingdom, origin=net$origin)
net$pathway
net$Impacted_sector_2
net$cost
sum(density[i, 48:54])
density[i, 48:54]
data$all_other<-rep(0, nrow(data))
which(rowSums(data[,94:99])==0)
data$all_other[which(rowSums(data[,94:99])==0)]<-1
data$all_other
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum, na.rm=T)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,48:54])[which(density[i,48:54]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 48:54])
}
}
net<-net[2:nrow(net),]
library(networkD3)
net$origin[which(is.na(net$origin))]<-"UNK"
links = data.frame(source=net$pathway,target=net$Impacted_sector_2,value=net$cost, value2=1, value3=net$Cost,Kingdom=net$Kingdom, origin=net$origin)
net$cost
net$Impacted_sector_2,
net$pathway
net$Impacted_sector_2
net$origin
net$Kingdom
links = data.frame(source=net$pathway,target=net$Impacted_sector_2,value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target)) %>% unique())
links$IDsource=match(links$source, nodes$name)-1
links$IDtarget=match(links$target, nodes$name)-1
links$group<-as.numeric(factor(paste0(links$source, links$target, links$Kingdom)))
links<-links[order(links$Kingdom),]
links$group<-as.numeric(factor(paste0(links$source, links$target, links$origin)))
links$group<-as.numeric(factor(paste0(links$source, links$target, links$Kingdom)))
links<-links[order(links$Kingdom),]
#links$group<-as.numeric(factor(paste0(links$source, links$target, links$origin)))
#links<-links[order(links$origin),]
links<-links %>% group_by(IDsource, IDtarget, group, Kingdom,origin) %>% summarise_if(is.numeric, sum, na.rm=T)
my_color2c <- 'd3.scaleOrdinal() .domain(["Plantae", "Animalia", "Chromista","Fungi",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["#b5bca0",  "#aaaaaa","#377eb8","#000000", "#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])' #grey animals, #green/beige plants, #blue chromista
library(htmlwidgets)
library(htmltools)
gdp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value", NodeID = "name", LinkGroup='origin', colourScale = my_color2c, fontSize = 12, ) #plot by cost, scaled by country gdp
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows (rescaled by country GDP)", style=("font-family: Helvetica; font-size:12; text-align: center")) )
gdp_viz$sizingPolicy$viewer$fill <- FALSE
gdp_viz
gdp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value", NodeID = "name", LinkGroup='Kingdom', colourScale = my_color2c, fontSize = 12, ) #plot by cost, scaled by country gdp
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows (rescaled by country GDP)", style=("font-family: Helvetica; font-size:12; text-align: center")) )
gdp_viz$sizingPolicy$viewer$fill <- FALSE
gdp_viz
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
spp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value2", NodeID = "name", LinkGroup="origin", colourScale = my_color2c, fontSize = 12) #plot by species
spp_viz<-prependContent(spp_viz, tags$div("Species Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
spp_viz$sizingPolicy$viewer$fill <- FALSE
spp_viz
spp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value2", NodeID = "name", LinkGroup="Kingdom", colourScale = my_color2c, fontSize = 12) #plot by species
spp_viz<-prependContent(spp_viz, tags$div("Species Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
spp_viz$sizingPolicy$viewer$fill <- FALSE
spp_viz
gdp_viz
gdp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value", NodeID = "name", LinkGroup='Kingdom', colourScale = my_color2c, fontSize = 12, ) #plot by cost, scaled by country gdp
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
gdp_viz$sizingPolicy$viewer$fill <- FALSE
gdp_viz
gdp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value", NodeID = "name", LinkGroup='origin', colourScale = my_color2c, fontSize = 12, ) #plot by cost, scaled by country gdp
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
gdp_viz$sizingPolicy$viewer$fill <- FALSE
gdp_viz
my_color2c <- 'd3.scaleOrdinal() .domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["blue","red","yellow","purple","grey","green","orange", "#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])' #grey
gdp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value", NodeID = "name", LinkGroup='origin', colourScale = my_color2c, fontSize = 12, ) #plot by cost, scaled by country gdp
gdp_viz<-prependContent(gdp_viz, tags$div("Cost Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
gdp_viz$sizingPolicy$viewer$fill <- FALSE
gdp_viz
links$group<-as.numeric(factor(paste0(links$source, links$target, links$origin)))
links<-links[order(links$origin),]
spp_viz<-sankeyNetwork(Links = links, Nodes = nodes, Source = "IDsource", Target = "IDtarget", Value = "value2", NodeID = "name", LinkGroup="origin", colourScale = my_color2c, fontSize = 12) #plot by species
spp_viz<-prependContent(spp_viz, tags$div("Species Flows", style=("font-family: Helvetica; font-size:12; text-align: center")) )
spp_viz$sizingPolicy$viewer$fill <- FALSE
spp_viz

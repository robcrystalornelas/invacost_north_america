spp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
NodeGroup="origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,
) #plot by species
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup = 'IDsource',
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-links[1:nrow(net),]
links<-links2
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links2<-links
links<-links2[1:nrow(net),]
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(originIDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
links<-links[order(links$origin),]
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
links<-links %>% group_by(originIDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(originIDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fisheries', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fisheries', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20, iterations=0) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,iterations=0
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
nodes[1:7,1]
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
nodes[1:7,1]
nodes[8:13,1]
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "Unknown", "Other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "Other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
library(htmlwidgets)
library(htmltools)
nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20, iterations=0) #plot by cost, scaled by country gdp
node
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "Unknown", "Other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "Other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
library(htmlwidgets)
library(htmltools)
,nodes
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "Unknown", "all_other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "all_other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
nodes
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "Unknown", "all_other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "all_other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:7,1]<-c("Africa", "Asia", "North America", "South America", "Europe")
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "UNK", "all_other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "all_other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
nodes
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:5,1]<-c("Africa", "Asia", "North America", "South America", "Europe")
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "UNK", "all_other")==F)
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
nodes
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "UNK", "all_other")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified", "all_other")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
nodes
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "UNK")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:5,1]<-c("Africa", "Asia", "North America", "South America", "Europe")
nodes
nodes[6:11,1]<-c('Agriculture','Pet Trade', 'Forestry','Other',  'Fishery', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20, iterations=0) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,source%in%c("Diverse", "UNK")==F)
links<-subset(links,target%in%c("Mixed", "Unspecified")==F)
View(links2)
View(links)
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,target%in%c("Mixed", "Unspecified")==F)
links<-subset(links, origin%in%c("Diverse", "UNK")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:5,1]<-c("Africa", "Asia", "North America", "South America", "Europe")
nodes[6:11,1]<-c('Agriculture','Pet Trade', 'Forestry','Other',  'Fishery', "Health")
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20, iterations=0) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,iterations=0
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
View(r)
nodes
links = data.frame(source=c(net$origin, net$pathway),target=c(net$pathway,net$Impacted_sector_2),value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
links<-subset(links,target%in%c("Mixed", "Unspecified")==F)
links<-subset(links, origin%in%c("Diverse", "UNK")==F)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target) ) %>% unique())
View(nodes)
links$IDsource=c(match(links$source, nodes$name)-1 )
links$IDtarget=c(match(links$target, nodes$name)-1)
links<-links %>% group_by(origin,IDsource, IDtarget) %>% summarise_if(is.numeric, sum, na.rm=T)
links$origin<-mgsub(links$origin,c("AF","As","UNK","Diverse","NAm","SA","EUR") ,c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe"))
#  my_color <- 'd3.scaleOrdinal(d3.schemeCategory20)'
#
#
#  plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
#  legend("topleft", legend =c( "As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF"), pch=16, pt.cex=1.5, cex=1, bty='n',
#         col = c("#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D"), title="Continent of Origin")
# library(htmlwidgets)
# library(htmltools)
# nodes[1:7,1]<-c("Africa", "Asia", "Unknown", "Diverse", "North America", "South America", "Europe")
# nodes[8:13,1]<-c('Agriculture','Pet Trade', 'Forestry', 'Other',  'Fishery', "Health")
nodes[1:5,1]<-c("Africa", "Asia", "North America", "South America", "Europe")
nodes[6:10,1]<-c('Agriculture','Pet Trade', 'Forestry','Other',  'Fishery')
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup="origin",
colourScale = my_color,
fontSize = 20,nodePadding = 20, iterations=0) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,iterations=0
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
unique(density$Species)

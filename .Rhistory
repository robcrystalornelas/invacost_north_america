#invacost_cln<-subset(invacost_cln, Genus%in%c("Aedes",'Dreissena','Solenopsis','Myocastor', 'Gymnocephalus','Sus', 'Eichhornia' ,'Lymantria'))
#genera<-c("Aedes",'Dreissena','Solenopsis','Myocastor', 'Gymnocephalus','Sus', 'Eichhornia' , 'Lymantria')
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
invacost_cln<-merge(invacost_cln, stwist, by=c('Species','Official_country'), all.x=T)
View(invacost_cln)
View(invacost_cln)
write.csv(invacost_cln, file="Vertebrates_stwist_nonexpanded.csv", row.names=F)
getw()
getwd()
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.csv('~/Downloads/InvaCost_Vertebrates-expanded.csv')
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.table('~/Downloads/InvaCost_Vertebrates-expanded.csv')
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.table('~/Downloads/InvaCost_Vertebrates-expanded.csv', sep=)
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.csv('~/Downloads/InvaCost_Vertebrates-expanded.csv', sep=)
colnames(invacost)
invacost_cln<-invacost[,c(2,5,12:18,20,22,24,36,41,43:45)]
#invacost_cln<-subset(invacost_cln, Genus%in%c("Aedes",'Dreissena','Solenopsis','Myocastor', 'Gymnocephalus','Sus', 'Eichhornia' ,'Lymantria'))
#genera<-c("Aedes",'Dreissena','Solenopsis','Myocastor', 'Gymnocephalus','Sus', 'Eichhornia' , 'Lymantria')
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
invacost_cln<-merge(invacost_cln, stwist, by=c('Species','Official_country'), all.x=T)
write.csv(invacost_cln, file="Vertebrates_stwist_expanded.csv", row.names=F)
View(invacost_cln)
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.csv('~/Downloads/InvaCost_Vertebrates-expanded.csv', sep=)
View(invacost)
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.csv('~/Dropbox/InvaCost Workshop France/Projects/Math cost modelling of biological invasions/Analyses/Datasets/invacost-damage_ExpandedNew.csv')
#invacost<-subset(invacost, Implementation%in%c("Observed"))
invacost_cln<-invacost[,c(2,6,18,19,23,25,37,46)]
invacost_cln<-subset(invacost_cln, Spatial_scale%in%c("Country"))
colnames(invacost_cln)[7]<-"Cost"
invacost_cln<-subset(invacost_cln, Genus%in%c('Aedes' ,'Oryctolagus','Sus' ,'Lymantria', 'Canis','Rattus','Sturnus','Anoplophora', 'Ceratitis' ,'Myocastor'))
#genera<-c("Aedes",'Dreissena','Solenopsis','Myocastor', 'Gymnocephalus','Sus', 'Eichhornia' , 'Lymantria')
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
#invacost_cln<-merge(invacost_cln, stwist, by=c('Genus','Species','Official_country'), all.x=T)
for (i in 1:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
print(nrow(gensub))
# temporal_total<-invacost_cln%>%group_by(Genus)%>%summarise_at(c('Ref_code', "Impact_year"), function(x){length(unique(x))})
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i],"_temporalcost_allreliability.csv"), row.names=F)
}
genera<-c('Aedes' ,'Oryctolagus','Sus' ,'Lymantria', 'Canis','Rattus','Sturnus','Anoplophora', 'Ceratitis' ,'Myocastor')
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
#invacost_cln<-merge(invacost_cln, stwist, by=c('Genus','Species','Official_country'), all.x=T)
for (i in 1:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
print(nrow(gensub))
# temporal_total<-invacost_cln%>%group_by(Genus)%>%summarise_at(c('Ref_code', "Impact_year"), function(x){length(unique(x))})
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i],"_temporalcost_allreliability.csv"), row.names=F)
}
library(dplyr)
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
#invacost_cln<-merge(invacost_cln, stwist, by=c('Genus','Species','Official_country'), all.x=T)
for (i in 1:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
print(nrow(gensub))
# temporal_total<-invacost_cln%>%group_by(Genus)%>%summarise_at(c('Ref_code', "Impact_year"), function(x){length(unique(x))})
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i],"_temporalcost_allreliability.csv"), row.names=F)
}
for (i in 1:8)
{
gensub<-subset(invacost_cln, Genus==genera[i])
invacost_cln<-subset(invacost_cln, Method_reliability=="High")
print(nrow(gensub))
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i], "_temporalcost_highreliability.csv"))
}
for (i in 9:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
invacost_cln<-subset(invacost_cln, Method_reliability=="High")
print(nrow(gensub))
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i], "_temporalcost_highreliability.csv"))
}
i=9
gensub<-subset(invacost_cln, Genus==genera[i])
View(gensub)
invacost_cln<-subset(invacost_cln, Method_reliability=="High")
# invacost_cln<-0
# for (i in 1:nrow(costdb)){
#   invacost_cln[i] <- rawAvgCost(costdb[i,], year.column="Impact_year")$annual_cost# cumulative costs 2000-2009 at global scale
# }
# invacost_cln<-cbind(costdb, invacost_cln)
invacost<-read.csv('~/Dropbox/InvaCost Workshop France/Projects/Math cost modelling of biological invasions/Analyses/Datasets/invacost-damage_ExpandedNew.csv')
#invacost<-subset(invacost, Implementation%in%c("Observed"))
invacost_cln<-invacost[,c(2,6,18,19,23,25,37,46)]
invacost_cln<-subset(invacost_cln, Spatial_scale%in%c("Country"))
colnames(invacost_cln)[7]<-"Cost"
invacost_cln<-subset(invacost_cln, Genus%in%c('Aedes' ,'Oryctolagus','Sus' ,'Lymantria', 'Canis','Rattus','Sturnus','Anoplophora', 'Ceratitis' ,'Myocastor'))
genera<-c('Aedes' ,'Oryctolagus','Sus' ,'Lymantria', 'Canis','Rattus','Sturnus','Anoplophora', 'Ceratitis' ,'Myocastor')
#stwist$Genus<-gsub("\\s.+", "",stwist$Species)
#invacost_cln<-merge(invacost_cln, stwist, by=c('Genus','Species','Official_country'), all.x=T)
for (i in 1:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
print(nrow(gensub))
# temporal_total<-invacost_cln%>%group_by(Genus)%>%summarise_at(c('Ref_code', "Impact_year"), function(x){length(unique(x))})
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i],"_temporalcost_allreliability.csv"), row.names=F)
}
for (i in 1:10)
{
gensub<-subset(invacost_cln, Genus==genera[i])
gensub<-subset(gensub, Method_reliability=="High")
print(nrow(gensub))
temporal_total<-gensub%>%group_by(Impact_year)%>%summarise_at("Cost", sum)
write.csv(temporal_total,paste0(genera[i], "_temporalcost_highreliability.csv"))
}
i=5
gensub<-subset(invacost_cln, Genus==genera[i])
View(gensub)
i=9
gensub<-subset(invacost_cln, Genus==genera[i])
View(gensub)
i=5
gensub<-subset(invacost_cln, Genus==genera[i])
print(nrow(gensub))
View(gensub)
genera[6,7,9]
genera[c(6,7,9)]
i=6
gensub<-subset(invacost_cln, Genus==genera[i])
View(gensub)
i=7
gensub<-subset(invacost_cln, Genus==genera[i])
gensub<-subset(invacost_cln, Genus==genera[i])
gensub<-subset(gensub, Method_reliability=="High")
View(gensub)
setwd('~/Documents/GitHub/invacost_north_america/scripts/')
source("scripts/filtering_and_cleaning_data.R")
setwd('~/Documents/GitHub/invacost_north_america/')
library(countrycode)
library(wbstats)
library(invacost)
data<-expanded_observed_and_high_and_country
source("scripts/filtering_and_cleaning_data.R")
library(countrycode)
library(wbstats)
library(invacost)
data<-expanded_observed_and_high_and_country
data$Species<-gsub("spp.","sp.", data$Species) # 51 species + Diverse/Unspecified, several not resolved to the species level
data$Species<-gsub("Aedes.*", "Aedes aegypti albopictus", data$Species)
pathways<-read.csv('scripts/intro_pathways_vectors_all.csv')
colnames(pathways)[1]<-"Species"
spp_dat<-data.frame(Species=unique(data$Species))
path_dat<-merge(spp_dat, pathways, "Species", all.x=T)# cols 2-47 are causes, 48-76 are vectors
colSums(pathways[,2:47]/rowSums(pathways[,2:47], na.rm=T), na.rm=T) # assuming equal breakdown across pathways for a given species
colSums(pathways[,48:76]/rowSums(pathways[,48:76], na.rm=T), na.rm=T)
#could conceivably group into smaller set of levels, aggregate similar to origin
origins<-read.csv('scripts/intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data<-merge(data, origin_dat[,c(1,10)], by="Species")
health_spend<-read.csv('scripts/CHE by GDP_by country.csv')
health_spend<-health_spend[2:nrow(health_spend),]
health_spend$codes2<-countrycode(health_spend$X, 'country.name', 'iso3c')
data$codes2<-countrycode(data$Official_country, 'country.name', 'iso3c')
data<-merge(data,health_spend[,c(2,20)], "codes2") # WHO % gdp spent on health in 2017 by country (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"health_spend"
ind_spend<-read.csv('scripts/API_NV.AGR.TOTL.CD_DS2_en_csv_v2_1121017.csv')
ind_spend$codes2<-countrycode(ind_spend$Country.Name, 'country.name', 'iso3c')
data<-merge(data,ind_spend[,c(62,65)], "codes2" ) #industry value added for agriculture, fisheries, forestries in 2017 (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"ind_spend"
spp_dat<-data.frame(Species=unique(data$Species))
data<-expanded_observed_and_high_and_country
data<-expanded_observed_and_high
data$Species<-gsub("spp.","sp.", data$Species) # 51 species + Diverse/Unspecified, several not resolved to the species level
data$Species<-gsub("Aedes.*", "Aedes aegypti albopictus", data$Species)
pathways<-read.csv('scripts/intro_pathways_vectors_all.csv')
colnames(pathways)[1]<-"Species"
spp_dat<-data.frame(Species=unique(data$Species))
path_dat<-merge(spp_dat, pathways, "Species", all.x=T)# cols 2-47 are causes, 48-76 are vectors
colSums(pathways[,2:47]/rowSums(pathways[,2:47], na.rm=T), na.rm=T) # assuming equal breakdown across pathways for a given species
colSums(pathways[,48:76]/rowSums(pathways[,48:76], na.rm=T), na.rm=T)
origins<-read.csv('scripts/intro_pathways_origins_all.csv')
colnames(origins)[1]<-"Species"
origin_dat<-merge(spp_dat, origins, all.x=T)
data<-merge(data, origin_dat[,c(1,10)], by="Species")
health_spend<-read.csv('scripts/CHE by GDP_by country.csv')
health_spend<-health_spend[2:nrow(health_spend),]
health_spend$codes2<-countrycode(health_spend$X, 'country.name', 'iso3c')
data$codes2<-countrycode(data$Official_country, 'country.name', 'iso3c')
data<-merge(data,health_spend[,c(2,20)], "codes2") # WHO % gdp spent on health in 2017 by country (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"health_spend"
ind_spend<-read.csv('scripts/API_NV.AGR.TOTL.CD_DS2_en_csv_v2_1121017.csv')
ind_spend$codes2<-countrycode(ind_spend$Country.Name, 'country.name', 'iso3c')
data<-merge(data,ind_spend[,c(62,65)], "codes2" ) #industry value added for agriculture, fisheries, forestries in 2017 (could alternatively match to 'impact_year')
colnames(data)[ncol(data)]<-"ind_spend"
GDP<-wb_data(country = unique(data$codes2), indicator = c( "NY.GDP.MKTP.KD"),  start_date = 2017,end_date=2017, return_wide=TRUE) # could change this to 1960-2017 and match with impact_year
data$GDP<-GDP$NY.GDP.MKTP.KD[match(data$codes2, GDP$iso3c)]
Inv_res_dev <-wb_data(country = unique(data$codes2), indicator = c( "GB.XPD.RSDV.GD.ZS"),  start_date = 2017,end_date=2017, return_wide=TRUE)#one metric used in another paper im on, % gdp expenditure on R&D
data$RD<-Inv_res_dev$GB.XPD.RSDV.GD.ZS[match(data$codes2, Inv_res_dev$iso3c)]
### Import sTwist ###
stwist<-read.table('scripts/AlienSpecies_MultipleDBs_Masterfile_vs2.3.csv', header=T, stringsAsFactors = F)
colnames(stwist)[3]<-'Species'
colnames(stwist)[1]<-"Official_country"
stwist$Official_country<-gsub("United States of America", "USA", stwist$Official_country)
stwist<-subset(stwist, Official_country%in%data$Official_country)
library(taxize)
data$Species_gbif<-gbif_parse(data$Species)$canonicalname
stwist<-subset(stwist, grepl("established",stwist$degreeOfEstablishment))
stwist$Species_gbif<-gbif_parse(stwist$Species)$canonicalname
# stwist$eventDate<-as.numeric(as.character(stwist$eventDate))
length(unique(stwist$Species_gbif[which(stwist_est$eventDate>=1970)])) #114
# stwist$eventDate<-as.numeric(as.character(stwist$eventDate))
length(unique(stwist$Species_gbif[which(stwist$eventDate>=1970)])) #114
stwist$eventDate<-as.numeric(stwist$eventDate)
hist(subset(stwist$eventDate, stwist$eventDate>1800), xlim=c(1800,2040), breaks=20, xlab="sTwist year of first record", main=NULL) #32 before 1800
#Completeness of invacost based on stwist 14754 total species
# 51 species + Diverse/Unspecified, several not resolved to the species level
library(vioplot)
library(viridis)
stwist_s<-subset(stwist, eventDate>=1800)
length(which(stwist$eventDate<1800))
vioplot(stwist_s$eventDate~stwist_s$Official_country, col=viridis(5), outer=T, horizontal=T, cex.axis=0.75) #32 before 1800
title(xlab="sTwist year of first record")
vioplot(data$Impact_year~data$Official_country, col=viridis(5), outer=T,  horizontal=T, cex.axis=0.75) #32 before 1800
points(y=rep(2,3),x=c(data$Impact_year[which(data$codes2=="CUB")]), bg=viridis(5)[2], pch=21, col="black")
points(y=rep(3,2),x=c(data$Impact_year[which(data$codes2=="DOM")]), bg=viridis(5)[3], pch=21, col="black")
which(data$codes2=="DOM")
data$Impact_year[which(data$codes2=="DOM")]
title(xlab="Invacost impact year")
table(stwist$Official_country)
data2<-aggregate(data, by=list(data$Species, data$Official_country),FUN =  unique)
table(data2$codes2)
View(data2)
View(data)
length(which(stwist$Species%in%data$Species))/length(unique(stwist$Species))
length(unique(stwist$Species[which(is.na(stwist$eventDate)==T)]))
stwist_intros<-subset(stwist,establishmentMeans%in%c("introduced" ,   "introduced; uncertain"  ,"introduced; vagrant" ,"introduced; uncertain; vagrant", "introduced; NA","introduced; ; NA"  ,"NA; introduced"))
n_intro<-stwist_intros %>%group_by(Species_gbif)%>%summarise_all(length)
data<-subset(data, is.na(Species_gbif)==F)
clip_spp<-merge(stwist, data, by=c("Species_gbif", "Official_country"), all=T)
codes<-countrycode(clip_spp$Official_country, 'country.name', 'iso3c')
countrydat<-readRDS('scripts/CountriesDataPop.rds')
countrydat$NAME<-gsub("United States", "USA", countrydat$NAME)
countrydat$NAME<-gsub("Dominican Rep.", "Dominican Republic", countrydat$NAME)
countrydat<-subset(countrydat,  NAME%in%data$Official_country)
codes2<-countrycode(countrydat$NAME, 'country.name', 'iso3c')
clip_spp$Area<-countrydat$area_sqkm[match(codes,codes2)]
#probably actually want area of region rather than country
clip_spp2<-subset(clip_spp, Species_gbif%in%data$Species_gbif)
clip_spp4<-clip_spp2%>%group_by(Species_gbif, Official_country)%>%summarise_if(is.numeric, max)
range_prop<-range_size<-n_countries<-0
for (i in 1:length(unique(clip_spp4$Species_gbif)))
{
sub<-subset(clip_spp4, Species_gbif==unique(clip_spp4$Species_gbif)[i])
range_prop[i]<-sum(sub$Area[which(is.na(sub$cost_bil)==F)], na.rm=T)/sum(sub$Area, na.rm=T)
range_size[i]<-sum(sub$Area, na.rm=T)
n_countries[i]<-length(unique(sub$Official_country))
}
range_size<-data.frame(range_size, Species_gbif=unlist(unique(clip_spp4$Species_gbif)))
range_prop<-data.frame(range_prop, Species_gbif=unlist(unique(clip_spp4$Species_gbif)))
data$range_size<-range_size$range_size[match(data$Species_gbif, range_size$Species_gbif)]
data$range_prop<-range_prop$range_prop[match(data$Species_gbif, range_prop$Species_gbif)]
data$n_intro<-n_intro$Official_country[match(data$Species_gbif, n_intro$Species_gbif)]
mean(range_prop[match(unique(data$Species_gbif),range_prop$Species_gbif),1], na.rm=T) #71.5 complete within iso3c codes when reported
which(range_size$range_size==max(range_size$range_size)) # how many species continent-wide invaders?
sum(data$cost_bil[which(data$range_size==max(data$range_size))])-4.320112
sum(data$cost_bil[which(data$Species_gbif=="Columba livia")])
sum(data$cost_bil[which(data$Species_gbif=="Columba livia")]/data$range_prop[which(data$Species_gbif=="Columba livia")])
sum(data$cost_bil/data$range_prop, na.rm=T)
sum(data$cost_bil, na.rm=T)
unique(data$Species_gbif)
range_size_stwist<-clip_spp%>%group_by(Species_gbif, Official_country)%>%summarise_at(c("Area", "Impact_year"), max)
range_size_stwist<-range_size_stwist%>%group_by(Species_gbif)%>%summarise_at(c("Area"), sum)
which(range_size_stwist$Area==max(range_size$range_size))
mean(as.numeric(unlist(n_intro[match(unique(data$Species_gbif),n_intro$Species_gbif),2])), na.rm=T) #when known, 2.22 independent introductions
length(which(is.na(unlist(n_intro[match(unique(data$Species_gbif),n_intro$Species_gbif),2]))==T)) #43 unknown
data_stwist<-merge(data,stwist, by=c("Species_gbif", "Official_country"), all.x=T)#not super complete, but might be worth exploring
# write.csv(data, file="NAm_data_econ_origin.csv", row.names=F)
# write.csv(path_dat, file="NAm_pathways.csv", row.names=F)
# write.csv(data_stwist, file="NAm_data_stwist.csv", row.names=F)
#(n=30)
spp_path<-read.csv('./data/intro_pathways_cabi_v3.csv')
spp_path$species_list<-gsub("Aedes .*", "Aedes aegypti albopictus", spp_path$species_list)
spp_path$Species_gbif<-gbif_parse(spp_path$species_list)$canonicalname
spp_path<-subset(spp_path, species_list%in%unique(data$Species_gbif))
colnames(spp_path)[1]<-"Species"
data<-merge(data, spp_path, "Species")
data$all_other<-rep(0, nrow(data))
data$all_other[which(rowSums(data[,c(92:96,98)])==0)]<-1
density<-data %>% group_by(Kingdom,Species, Impacted_sector_2, origin) %>% summarise_if(is.numeric, sum, na.rm=T)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,38:44])[which(density[i,38:44]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 38:44])
}
}
net<-net[2:nrow(net),]
library(networkD3)
density<-as.data.frame(density)
net<-(density[1,])
net[1,]<-NA
net$pathway<-NA
for (i in 1:nrow(density))
{
names<-colnames(density[i,38:44])[which(density[i,38:44]>0)]
for (j in 1:length(names))
{
net<-rbind(net, setNames(cbind(density[i,], names[j]),c(colnames(density), "pathway")))
net[i,"cost"]<-(density[i,"cost"]*density[i, names[j]])/sum(density[i, 38:44])
}
}
net<-net[2:nrow(net),]
library(networkD3)
net$origin[which(is.na(net$origin))]<-"UNK"
links = data.frame(source=net$pathway,target=net$Impacted_sector_2,value=net$cost, value2=1,Kingdom=net$Kingdom, origin=net$origin)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes=data.frame(name=c(as.character(links$source), as.character(links$target)) %>% unique())
links$IDsource=match(links$source, nodes$name)-1
links$IDtarget=match(links$target, nodes$name)-1
links$group<-as.numeric(factor(paste0(links$source, links$target, links$origin)))
links<-links[order(links$origin),]
links<-links %>% group_by(IDsource, IDtarget, group, Kingdom,origin) %>% summarise_if(is.numeric, sum, na.rm=T)
my_color2c <- 'd3.scaleOrdinal() .domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["blue","red","yellow","purple","grey","green","orange","#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0", "pink","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])'
my_color3 <- 'd3.scaleOrdinal() .domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["#267BB4FF","#F32020","#FDE725FF","#481567FF","lightgrey","#55C667FF","#FFBF2C","#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0", "pink","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])'
# Color codes for 2c
# blue = #267BB4FF
# red = #F32020
# yellow = #FDE725FF
# green = #55C667FF
# purple = #481567FF
# orange = #FFBF2C
my_color4 <- JS("d3.scaleOrdinal(d3.schemeCategory20);")
my_color <- 'd3.scaleOrdinal().domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed","Pet Trade", "Forestry", "Other", "Agriculture", "Fisheries", "Health"]).range(["#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "lightgrey","lightgrey", "lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey", "lightgrey"])'
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c( "Africa","Asia",      "Diverse",      "Europe",     "North America","South America" ,"Unknown"), pch=16, pt.cex=1.5, cex=1, bty='n',
col = c("#A6761D", "#1B9E77", "#7570B3","#D95F02" , "#E7298A", "#E6AB02","#66A61E"), title="Continent of Origin")
library(htmlwidgets)
library(htmltools)
nodes[1:6,1]<-c('Pet Trade', 'Forestry', 'Other', 'Agriculture', 'Fisheries', 'Health')
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup = 'origin',
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
View(links)
links<-links[order(links$origin),]
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup = 'origin',
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
View(links)
links$group
links$group<-as.numeric(factor(paste0(links$origin,links$source, links$target)))
links<-links[order(links$origin),]
links<-links %>% group_by(IDsource, IDtarget, group, Kingdom,origin) %>% summarise_if(is.numeric, sum, na.rm=T)
my_color2c <- 'd3.scaleOrdinal() .domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["blue","red","yellow","purple","grey","green","orange","#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0", "pink","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])'
my_color3 <- 'd3.scaleOrdinal() .domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed", "all_agri", "all_other", "all_pet", "all_for" , "all_fish"]) .range(["#267BB4FF","#F32020","#FDE725FF","#481567FF","lightgrey","#55C667FF","#FFBF2C","#e41a1c","#045a8d", "#262f09","#b4b4b4","#006d2c", "#8c8c8c", "#969696","#6effa0", "pink","#ad7274", "#a50f15", "#ff5b86", "#01dda5","#ffeb92"])'
# Color codes for 2c
# blue = #267BB4FF
# red = #F32020
# yellow = #FDE725FF
# green = #55C667FF
# purple = #481567FF
# orange = #FFBF2C
my_color4 <- JS("d3.scaleOrdinal(d3.schemeCategory20);")
my_color <- 'd3.scaleOrdinal().domain(["As",      "Diverse", "NAm",     "EUR",     "UNK" ,    "SA",      "AF",  "Authorities-Stakeholders" , "Environment" ,"Diverse/Unspecified", "Forestry" ,  "Agriculture","Fishery" , "Public and social welfare", "Health","Mixed","Pet Trade", "Forestry", "Other", "Agriculture", "Fisheries", "Health"]).range(["#1B9E77", "#D95F02" ,"#7570B3", "#E7298A", "#66A61E" ,"#E6AB02", "#A6761D", "lightgrey","lightgrey", "lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey","lightgrey", "lightgrey"])'
plot(NULL ,xaxt='n',yaxt='n',bty='n',ylab='',xlab='', xlim=0:1, ylim=0:1)
legend("topleft", legend =c( "Africa","Asia",      "Diverse",      "Europe",     "North America","South America" ,"Unknown"), pch=16, pt.cex=1.5, cex=1, bty='n',
col = c("#A6761D", "#1B9E77", "#7570B3","#D95F02" , "#E7298A", "#E6AB02","#66A61E"), title="Continent of Origin")
library(htmlwidgets)
library(htmltools)
nodes[1:6,1]<-c('Pet Trade', 'Forestry', 'Other', 'Agriculture', 'Fisheries', 'Health')
links<-links[order(links$origin),]
gdp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value",
NodeID = "name",
LinkGroup = 'origin',
colourScale = my_color,
fontSize = 20,nodePadding = 20) #plot by cost, scaled by country gdp
gdp_viz <-
prependContent(gdp_viz, tags$div(
"Cost Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
gdp_viz
spp_viz <-
sankeyNetwork(
Links = links,
Nodes = nodes,
Source = "IDsource",
Target = "IDtarget",
Value = "value2",
NodeID = "name",
LinkGroup = "origin",
colourScale = my_color,
fontSize = 20, nodePadding=20,
) #plot by species
spp_viz <-
prependContent(spp_viz, tags$div(
"Species Flows",
style = ("font-family: Helvetica; font-size:13; text-align: center")
))
spp_viz
sum(data$cost_bil[which(data$Species_gbif=="Columba livia")])
sum(data$cost_bil[which(data$Species_gbif=="Columba livia")]/data$range_prop[which(data$Species_gbif=="Columba livia")])
View(range_size)
View(range_prop)
View(density)
unique(density$Species)
n_intro
View(n_intro)
mean(as.numeric(unlist(n_intro[match(unique(data$Species_gbif),n_intro$Species_gbif),2])), na.rm=T) #when known, 2.22 independent introductions
